<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	   http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd"
	default-lazy-init="true">

	
	<!-- 缓存管理器 使用Ehcache实现
    <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManagerConfigFile" value="classpath:spring/ehcache.xml"/>
    </bean> -->
	
	
	<!-- 凭证匹配器 -->
    <bean id="credentialsMatcher" class="nsw.base.core.shiro.RetryLimitHashedCredentialsMatcher">
        <!-- <constructor-arg ref="shiroCacheManager"/> -->
        <!-- 加密算法的名称 -->
        <property name="hashAlgorithmName" value="md5"/>
         <!-- 配置加密的次数 -->
        <property name="hashIterations" value="2"/>
        <!-- true means hex encoded, false means base64 encoded -->
        <property name="storedCredentialsHexEncoded" value="true"/>
    </bean>
	
	
	
    <!-- Realm实现 -->
    <bean id="userRealm" class="nsw.base.core.shiro.UserRealm">
        <!-- <property name="loginService" ref="loginService"/> -->
        <!-- <property name="credentialsMatcher" ref="credentialsMatcher"/> -->
        <property name="cachingEnabled" value="false"/>
        <!-- <property name="authenticationCachingEnabled" value="true"/>
        <property name="authenticationCacheName" value="authenticationCache"/>
        <property name="authorizationCachingEnabled" value="true"/>
        <property name="authorizationCacheName" value="authorizationCache"/>-->
    </bean>
    
    
    <!-- remeberMe Cookie模板 -->
    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">  
	    <constructor-arg value="rememberMe"/>  
	    <property name="httpOnly" value="true"/>  
	    <property name="maxAge" value="-1"/><!--  2592000 30天 -->  
	</bean>
	
	
	<!-- rememberMe管理器
		rememberMe管理器，cipherKey是加密rememberMe Cookie的密钥；默认AES算法;
	 -->  
	<bean id="rememberMeManager"  class="org.apache.shiro.web.mgt.CookieRememberMeManager">  
	    <!-- <property name="cipherKey" value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}"/>   -->
	    <property name="cookie" ref="rememberMeCookie"/>  
	</bean>
		
	
	

    <!-- 会话ID生成器 -->
    <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>
    
    
    <!-- 会话Cookie模板 -->
    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="sid"/>
        <property name="httpOnly" value="true"/>
        <!-- sessionIdCookie：maxAge=-1表示浏览器关闭时失效此Cookie -->
        <property name="maxAge" value="-1"/>
    </bean>
    
    
    <!-- 会话DAO -->
    <bean id="sessionDAO" class="nsw.base.core.shiro.SessionRedisDao">
        <property name="sessionIdGenerator" ref="sessionIdGenerator"/>
    </bean>

    <!-- 会话验证调度器  半个小时检查一下是否session有效-->
    <bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">
        <property name="sessionValidationInterval" value="1800000"/>
        <property name="sessionManager" ref="sessionManager"/>
    </bean>
    
    

    <!-- 会话管理器 -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="sessionIdUrlRewritingEnabled" value="false" />
    	<!-- 会话的全局过期时间（毫秒为单位），默认30分钟 -->
        <property name="globalSessionTimeout" value="1800000"/>
        <property name="deleteInvalidSessions" value="true"/>
        <property name="sessionValidationSchedulerEnabled" value="true"/>
        <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
        <property name="sessionDAO" ref="sessionDAO"/>
        <property name="sessionIdCookieEnabled" value="true"/>
        <property name="sessionIdCookie" ref="sessionIdCookie"/>
    </bean>

    <!-- 安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="userRealm"/>
        <property name="sessionManager" ref="sessionManager"/>
        <property name="cacheManager" ref="shiroCacheManager"/>
        <property name="rememberMeManager" ref="rememberMeManager"/>
    </bean>
    
    
    <!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>

    <!-- 基于Form表单的身份验证过滤器 -->
    <bean id="formAuthenticationFilter" class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter">
        <property name="usernameParam" value="username"/>
        <property name="passwordParam" value="password"/>
        <property name="loginUrl" value="/views/login.html"/>
        <!-- <property name="loginUrl" value="/rest/forward/login"/> -->
        <property name="rememberMeParam" value="rememberMe"/>
    </bean>
	<bean id="myUserFilter" class="nsw.base.core.utils.filter.UserSessionFilter">
		<property name="loginUrl" value="/views/login.html"/>
	</bean>
    <!-- Shiro的Web过滤器 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/views/login.html"/>
        <property name="successUrl" value="/rest/index"/>
        <property name="unauthorizedUrl" value="/rest/forward/401"/>
        <property name="filters">
            <util:map>
                <entry key="authc" value-ref="formAuthenticationFilter"/>
                <entry key="userFilter" value-ref="myUserFilter"/>
            </util:map>
        </property>
        <property name="filterChainDefinitions">
            <value>
                <!-- 
                /login.jsp = authc
                /** = user 
                -->
                
                <!-- 静态资源允许访问 -->
                /logout = logout
                /app/** = anon
                /thirdparty/** = anon
                /views/errorpage/**  = anon
                <!-- 公共跳转页面访问权限放开 -->
                /rest/login/loginAuth = anon
                /rest/forward/login = authc
                /rest/forward/404 = anon
                /rest/forward/4042 = anon
                /rest/forward/401 = anon
                /rest/forward/500 = anon
                /rest/forward/errorJson = anon
                <!-- 用户登录 -->
                /views/login.html = anon
                <!-- 登录状态检查 -->
                /rest/login/chklogin = anon
                /rest/login/checkUnameExist = anon
                /rest/login/editPassword = anon
                /rest/login/editSaba = anon
                <!-- 用户密码找回功能 -->
                /rest/login/getBackPWD = anon
                <!-- 注册表单提交 -->
                /rest/login/register = anon
                /demo-ace/* = anon
                /rest/api/element/import = anon
                
                /favicon.ico = anon
                /**.html = anon
                /**.js = anon
                /**.css = anon
                
                <!-- 其他资源需要认证
                /** = authc
                /** = anon 
                -->
                /** = userFilter
                
            </value>
        </property>
    </bean>
    <!-- Shiro生命周期处理器-->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
</beans>